WARN  [2019-02-11 11:34:48,954][] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:140 - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/consoleServer/dev": Read timed out; nested exception is java.net.SocketTimeoutException: Read timed out 
WARN  [2019-02-11 11:34:53,363][] org.springframework.context.support.AbstractApplicationContext:558 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Invalid bean definition with name '${spring.dubbo.application.name}' defined in null: Could not resolve placeholder 'spring.dubbo.application.name' in value "${spring.dubbo.application.name}"; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'spring.dubbo.application.name' in value "${spring.dubbo.application.name}" 
WARN  [2019-02-11 11:38:16,441][] org.springframework.cloud.config.client.ConfigServicePropertySourceLocator:140 - Could not locate PropertySource: I/O error on GET request for "http://localhost:8888/consoleServer/dev": Read timed out; nested exception is java.net.SocketTimeoutException: Read timed out 
WARN  [2019-02-11 11:38:19,206][] org.springframework.context.support.AbstractApplicationContext:558 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Invalid bean definition with name '${spring.dubbo.application.name}' defined in null: Could not resolve placeholder 'spring.dubbo.application.name' in value "${spring.dubbo.application.name}"; nested exception is java.lang.IllegalArgumentException: Could not resolve placeholder 'spring.dubbo.application.name' in value "${spring.dubbo.application.name}" 
WARN  [2019-02-11 14:50:31,227][] org.springframework.context.annotation.ConfigurationClassPostProcessor:381 - Cannot enhance @Configuration bean definition 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'. 
WARN  [2019-02-11 14:51:09,969][] org.apache.juli.logging.DirectJDKLog:180 - The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:143)
 com.mysql.cj.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:43) 
WARN  [2019-02-11 14:51:09,970][] org.apache.juli.logging.DirectJDKLog:180 - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-184690926] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2480) 
WARN  [2019-02-11 14:51:09,970][] org.apache.juli.logging.DirectJDKLog:180 - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-184690926] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Thread.sleep(Native Method)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:2576) 
WARN  [2019-02-11 14:51:09,971][] org.apache.juli.logging.DirectJDKLog:180 - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:467)
 io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:251)
 io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
 io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.lang.Thread.run(Thread.java:748) 
WARN  [2019-02-11 14:55:36,544][] org.springframework.context.annotation.ConfigurationClassPostProcessor:381 - Cannot enhance @Configuration bean definition 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'. 
WARN  [2019-02-11 14:56:23,802][] org.apache.juli.logging.DirectJDKLog:180 - The web application [ROOT] appears to have started a thread named [Abandoned connection cleanup thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Object.wait(Native Method)
 java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:143)
 com.mysql.cj.jdbc.AbandonedConnectionCleanupThread.run(AbandonedConnectionCleanupThread.java:43) 
WARN  [2019-02-11 14:56:23,803][] org.apache.juli.logging.DirectJDKLog:180 - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Create-580385264] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)
 com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:2480) 
WARN  [2019-02-11 14:56:23,803][] org.apache.juli.logging.DirectJDKLog:180 - The web application [ROOT] appears to have started a thread named [Druid-ConnectionPool-Destroy-580385264] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Thread.sleep(Native Method)
 com.alibaba.druid.pool.DruidDataSource$DestroyConnectionThread.run(DruidDataSource.java:2576) 
WARN  [2019-02-11 14:56:23,804][] org.apache.juli.logging.DirectJDKLog:180 - The web application [ROOT] appears to have started a thread named [lettuce-eventExecutorLoop-1-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.LinkedBlockingQueue.poll(LinkedBlockingQueue.java:467)
 io.netty.util.concurrent.SingleThreadEventExecutor.takeTask(SingleThreadEventExecutor.java:251)
 io.netty.util.concurrent.DefaultEventExecutor.run(DefaultEventExecutor.java:64)
 io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
 io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
 java.lang.Thread.run(Thread.java:748) 
WARN  [2019-02-11 15:01:32,299][] org.springframework.context.annotation.ConfigurationClassPostProcessor:381 - Cannot enhance @Configuration bean definition 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'. 
WARN  [2019-02-11 15:07:25,057][] org.springframework.context.annotation.ConfigurationClassPostProcessor:381 - Cannot enhance @Configuration bean definition 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'. 
WARN  [2019-02-11 16:31:37,299][] org.springframework.context.annotation.ConfigurationClassPostProcessor:381 - Cannot enhance @Configuration bean definition 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'. 
WARN  [2019-02-11 16:36:53,980][] org.springframework.context.annotation.ConfigurationClassPostProcessor:381 - Cannot enhance @Configuration bean definition 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'. 
WARN  [2019-02-11 16:38:56,533][] org.springframework.context.annotation.ConfigurationClassPostProcessor:381 - Cannot enhance @Configuration bean definition 'com.alibaba.boot.dubbo.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'. 
