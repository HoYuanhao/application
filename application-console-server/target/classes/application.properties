spring.application.name=consoleServer
spring.cloud.config.uri= localhost:8888
spring.cloud.config.profile=dev
server.port=8081


mybatis.mapper-locations=classpath:/mapper/*.xml
#配置模型路径
mybatis.type-aliases-package=com.open.application.common.models

spring.dubbo.application.id=${spring.dubbo.application.id}
spring.dubbo.application.name=${spring.dubbo.application.name}
spring.dubbo.registry.address=${spring.dubbo.registry.address}
spring.dubbo.server=${spring.dubbo.server}
spring.dubbo.protocol.name=${spring.dubbo.protocol.name}
spring.dubbo.protocol.port=${spring.dubbo.protocol.port}


#数据库配置
spring.datasource.driver-class-name=${spring.datasource.driver-class-name}
spring.datasource.url=${spring.datasource.url}
spring.datasource.username=${spring.datasource.username}
spring.datasource.password=${spring.datasource.password}

#连接池配置
spring.datasource.initialSize=${spring.datasource.initialSize}
spring.datasource.minIdle=${spring.datasource.minIdle}
spring.datasource.maxActive=${spring.datasource.maxActive}
#连接等待超时时间
spring.datasource.maxWait=${spring.datasource.maxWait}
#配置隔多久进行一次检测(检测可以关闭的空闲连接)
spring.datasource.timeBetweenEvictionRunsMillis=${spring.datasource.timeBetweenEvictionRunsMillis}
#配置连接在池中的最小生存时间
spring.datasource.minEvictableIdleTimeMillis=${spring.datasource.minEvictableIdleTimeMillis}
spring.datasource.validationQuery=${spring.datasource.validationQuery}
spring.datasource.testWhileIdle=${spring.datasource.testWhileIdle}
spring.datasource.testOnBorrow=${spring.datasource.testOnBorrow}
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=${spring.datasource.poolPreparedStatements}
spring.datasource.maxPoolPreparedStatementPerConnectionSize=${spring.datasource.maxPoolPreparedStatementPerConnectionSize}
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=${spring.datasource.filters}
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=${spring.datasource.connectionProperties}